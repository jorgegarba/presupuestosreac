{"version":3,"sources":["components/Header.js","components/Formulario.js","components/Gasto.js","components/Presupuesto.js","components/Resto.js","components/ListaGastos.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","Component","Formulario","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","enviarGasto","e","preventDefault","descripcionRef","current","value","montoRef","fechaRef","objGasto","uuid","descripcion","monto","fecha","currentTarget","reset","agregarGasto","setState","error","React","createRef","state","onSubmit","htmlFor","readOnly","defaultValue","ref","Gasto","gasto","Presupuesto","presupuesto","Resto","getAlertColor","_this$props","resto","ListaGastos","gastos","Fragment","Presupuesto_Presupuesto","Resto_Resto","map","Gasto_Gasto","key","App","_this$state","push","Header_Header","Formulario_Formulario","ListaGastos_ListaGastos","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.290feab9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Features</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">About</a>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n                        <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport uuid from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Formulario extends Component {\r\n\r\n    descripcionRef;\r\n    montoRef;\r\n    fechaRef;\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.descripcionRef = React.createRef();\r\n        this.montoRef = React.createRef();\r\n        this.fechaRef = React.createRef();\r\n        this.state = {\r\n            error:false\r\n        }\r\n    }\r\n\r\n    enviarGasto = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(this.descripcionRef.current.value == \"\" ||\r\n            this.montoRef.current.value == \"\" ||\r\n            this.fechaRef.current.value == \"\"){\r\n            this.setState({\r\n                error:true\r\n            });\r\n            return;\r\n        }\r\n\r\n        let objGasto = {\r\n            id: uuid(),\r\n            descripcion: this.descripcionRef.current.value,\r\n            monto: this.montoRef.current.value,\r\n            fecha: this.fechaRef.current.value,\r\n        }    \r\n        e.currentTarget.reset();\r\n        this.props.agregarGasto(objGasto);\r\n        this.setState({\r\n            error:false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.enviarGasto}>\r\n                <fieldset>\r\n                    <legend>Gastos y Presupuestos</legend>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"staticEmail\" defaultValue=\"email@example.com\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Descripci√≥n del Gasto</label>\r\n                        <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"exampleInputEmail1\"\r\n                                placeholder=\"Ejm: Comida\"\r\n                                ref={this.descripcionRef}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Monto del Gasto</label>\r\n                        <input type=\"number\"\r\n                                className=\"form-control\"\r\n                                id=\"exampleInputPassword1\"\r\n                                placeholder=\"Ejm: 100.00\"\r\n                                ref={this.montoRef}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"fechaDelGasto\">Fecha del Gasto</label>\r\n                        <input type=\"date\"\r\n                                className=\"form-control\"\r\n                                id=\"fechaDelGasto\"\r\n                                ref={this.fechaRef}/>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Crear Gasto</button>\r\n                </fieldset>\r\n                {\r\n                    this.state.error ? \r\n                    <div className=\"alert alert-danger mt-5 text-center\">\r\n                    Todos los campos son obligatorios</div> : null\r\n                }  \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nFormulario.propTypes = {\r\n    agregarGasto: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Gasto extends Component {\r\n    render() {\r\n        return (\r\n            <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                <div className=\"d-flex w-100 justify-content-between\">\r\n                    <h5 className=\"mb-1\">{this.props.gasto.descripcion}</h5>\r\n                    <small>{this.props.gasto.fecha}</small>\r\n                </div>\r\n                <p className=\"mb-1\">S/. {this.props.gasto.monto}</p>\r\n                <small>{this.props.gasto.id}</small>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Presupuesto extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"alert alert-primary\">\r\n                Tu presupuesto: <strong>S./ {this.props.presupuesto}</strong>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Resto extends Component {\r\n\r\n    getAlertColor= () => {\r\n        const {presupuesto, resto} = this.props;\r\n        if(resto >= presupuesto/2){\r\n            return \"alert alert-success\";\r\n        }else if(resto >= presupuesto/4){\r\n            return \"alert alert-warning\"\r\n        }else{\r\n            return \"alert alert-danger\"\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.getAlertColor()}>\r\n                Te quedan: <strong>S/. {this.props.resto}</strong>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Gasto from './Gasto';\r\nimport Presupuesto from './Presupuesto';\r\nimport Resto from './Resto';\r\n\r\nexport default class ListaGastos extends Component {\r\n\r\n    render() {\r\n        let { gastos } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <h4>Lista de Gastos</h4>\r\n                <hr />\r\n                \r\n                <Presupuesto presupuesto={this.props.presupuesto}/>\r\n\r\n                <Resto resto={this.props.resto}\r\n                        presupuesto={this.props.presupuesto}/>\r\n\r\n                <div className=\"list-group mt-2\">\r\n                    \r\n                    {gastos.map(gasto => <Gasto key={gasto.id} gasto={gasto} />)}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport ListaGastos from './components/ListaGastos';\n\nexport default class App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      gastos:[],\n      presupuesto: 1000,\n      resto:1000,\n    }\n  }\n\n  agregarGasto = (objGasto) => {\n    let {gastos, resto} = this.state;\n    gastos.push(objGasto);\n\n    resto = resto - objGasto.monto;\n\n    this.setState({\n      gastos:gastos,\n      resto:resto\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header/>\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Formulario agregarGasto={this.agregarGasto}/>\n            </div>\n            <div className=\"col-md-6\">\n              <ListaGastos gastos={this.state.gastos}\n                          presupuesto={this.state.presupuesto}\n                          resto={this.state.resto}/>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}